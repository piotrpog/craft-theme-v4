{# v4 #}
{# http://craftsnippets.com/articles/breadcrumb-created-from-url-for-craft-cms #}

{# settings #}
{% set nonElementLinks = false %}

{# populate breadcrumbLinks array if no array of links was provided #}
{% if breadcrumbLinks is not defined %}
    {% set breadcrumbLinks = [] %}
    {# home #}
    {% set home = craft.app.getElements().getElementByUri('__home__', currentSite.id) %}
    {% set breadcrumbLinks = breadcrumbLinks|merge([{
        url: home.url ?? alias(currentSite.baseUrl),
        title: home.title ?? 'homepage'|t,
    }]) %}

    {# get elements #}
    {% set segments = craft.app.request.segments %}
    {% for segment in segments %}
        {% set uriPart = segments[0:loop.index]|join('/')|literal %}
        {% set element = craft.app.elements.getElementByUri(uriPart, currentSite.id) %}
        {% if element %}
            {% set breadcrumbLinks = breadcrumbLinks|merge([{
                url: element.url,
                title: element.title,
            }]) %}
        {% elseif nonElementLinks %}
            {% set breadcrumbLinks = breadcrumbLinks|merge([{
                url: url(uriPart),
                title: segment|t,
            }]) %}
        {% endif %}
    {% endfor %}
{% endif %}

{# render breadcrumb #}
{% if breadcrumbLinks|length > 1 %}
    <nav class="breadcrumb" aria-label="{{'breadcrumbs'|t}}">
        <ul itemscope itemtype="http://schema.org/BreadcrumbList">
            {% for link in breadcrumbLinks %}
                <li class="{{loop.last ? 'is-active'}}" {{loop.last ? 'aria-current="page"' }} itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                    <a href="{{link.url}}" itemtype="http://schema.org/Thing" itemprop="item">
                        <span itemprop="name">{{ link.title }}</span>
                    </a>
                    <meta itemprop="position" content="{{loop.index}}" />
                </li>
            {% endfor %}
        </ul>
    </nav>
{% endif %}
<style>
    {% css %}
    .breadcrumb {
        font-size: 1rem;
        white-space: nowrap;
    }

    .breadcrumb a {
        align-items: center;
        /*color: #485fc7;*/
        display: flex;
        justify-content: center;
        padding: 0 0.75em;
    }

    .breadcrumb a:hover {
        color: #363636;
    }

    .breadcrumb li {
        align-items: center;
        display: flex;
    }

    .breadcrumb li:first-child a {
        padding-left: 0;
    }

    .breadcrumb li.is-active a {
        color: #363636;
        cursor: default;
        pointer-events: none;
        display:none
    }

    .breadcrumb li + li::before {
        color: #b5b5b5;
        content: "\0002f";
    }

    .breadcrumb ul,
    .breadcrumb ol {
        align-items: flex-start;
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
    }

    .breadcrumb .icon:first-child {
        margin-right: 0.5em;
    }

    .breadcrumb .icon:last-child {
        margin-left: 0.5em;
    }

    .breadcrumb.is-centered ol,
    .breadcrumb.is-centered ul {
        justify-content: center;
    }

    .breadcrumb.is-right ol,
    .breadcrumb.is-right ul {
        justify-content: flex-end;
    }

    .breadcrumb.is-small {
        font-size: 0.75rem;
    }

    .breadcrumb.is-medium {
        font-size: 1.25rem;
    }

    .breadcrumb.is-large {
        font-size: 1.5rem;
    }

    .breadcrumb.has-arrow-separator li + li::before {
        content: "\02192";
    }

    .breadcrumb.has-bullet-separator li + li::before {
        content: "\02022";
    }

    .breadcrumb.has-dot-separator li + li::before {
        content: "\000b7";
    }

    .breadcrumb.has-succeeds-separator li + li::before {
        content: "\0227B";
    }

    /*////////////////////////////////*/
    .breadcrumb{
        margin-bottom: 0.7rem;
        font-size: 0.9rem;
    }
    @media(max-width: 1023px){
        .breadcrumb{
            font-size: 0.7rem;
        }
    }
    {% endcss %}
</style>